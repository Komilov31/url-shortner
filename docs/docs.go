// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Returns the main HTML page of the URL shortener",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "UI"
                ],
                "summary": "Get main page",
                "responses": {
                    "200": {
                        "description": "HTML page"
                    }
                }
            }
        },
        "/analytics/date": {
            "get": {
                "description": "Returns aggregated analytics data grouped by date",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get aggregated analytics by date",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_Komilov31_url-shortener_internal_dto.DateDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ginext.H"
                        }
                    }
                }
            }
        },
        "/analytics/month": {
            "get": {
                "description": "Returns aggregated analytics data grouped by month",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get aggregated analytics by month",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_Komilov31_url-shortener_internal_dto.MonthDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ginext.H"
                        }
                    }
                }
            }
        },
        "/analytics/user_agent": {
            "get": {
                "description": "Returns aggregated analytics data grouped by user agent",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get aggregated analytics by user agent",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_Komilov31_url-shortener_internal_dto.UserAgentDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ginext.H"
                        }
                    }
                }
            }
        },
        "/analytics/{short_url}": {
            "get": {
                "description": "Returns analytics data for the given short URL",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get analytics data for a short URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short URL",
                        "name": "short_url",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Komilov31_url-shortener_internal_dto.RedirectInfo"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/s/{short_url}": {
            "get": {
                "description": "Redirects to the original URL corresponding to the given short URL",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "URL"
                ],
                "summary": "Redirect to original URL by short URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short URL",
                        "name": "short_url",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "301": {
                        "description": "Redirect to original URL"
                    },
                    "400": {
                        "description": "Invalid short URL or not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/shorten": {
            "post": {
                "description": "Create a shortened URL from the provided original URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "URL"
                ],
                "summary": "Create a shortened URL",
                "parameters": [
                    {
                        "description": "URL to shorten",
                        "name": "url",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_Komilov31_url-shortener_internal_model.Url"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Komilov31_url-shortener_internal_model.Url"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/ginext.H"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ginext.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ginext.H": {
            "type": "object",
            "additionalProperties": {}
        },
        "github_com_Komilov31_url-shortener_internal_dto.DateDTO": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "integer"
                },
                "month": {
                    "type": "integer"
                },
                "redirect_count": {
                    "type": "integer"
                },
                "url_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Komilov31_url-shortener_internal_dto.UrlInfo"
                    }
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "github_com_Komilov31_url-shortener_internal_dto.MonthDTO": {
            "type": "object",
            "properties": {
                "month": {
                    "type": "integer"
                },
                "redirect_count": {
                    "type": "integer"
                },
                "url_info": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "short_url": {
                                "type": "string"
                            },
                            "time": {
                                "type": "string"
                            }
                        }
                    }
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "github_com_Komilov31_url-shortener_internal_dto.RedirectInfo": {
            "type": "object",
            "properties": {
                "redirect_count": {
                    "type": "integer"
                },
                "request_time": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "short_url": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_Komilov31_url-shortener_internal_dto.UrlInfo": {
            "type": "object",
            "properties": {
                "short_url": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "github_com_Komilov31_url-shortener_internal_dto.UserAgentDTO": {
            "type": "object",
            "properties": {
                "redirect_count": {
                    "type": "integer"
                },
                "short_url": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_Komilov31_url-shortener_internal_model.Url": {
            "type": "object",
            "properties": {
                "short_url": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
